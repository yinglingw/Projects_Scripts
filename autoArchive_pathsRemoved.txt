#!/bin/bash

# To execute the script
# ./scriptname projname 

# read in the user input from command line
projname=$1

if [[ $1 == "-h" || $1 == "-help" ]];
then
	echo
	echo This script is set to archive a Socet Set project 
	echo It will archive the Prep, data and images, and DTMgen directories
	echo
	echo projname :The script takes the first argument as the project name
	echo 
	echo -m or -M :A second optional argument to specify if the project
	echo "	  dir is located in PERSON’s directories"
	echo 
	echo "Execution should be $./autoArchive.txt <projname> [-m]"
	exit 0
fi

# checks to make sure an argument was given
if [ -z "$projname" ];
then
	echo Please enter a project name!
	exit 0
fi

echo
echo ------------------------------------------------------------------------
echo -------   Starting archivization of $projname    ----------
echo ------------------------------------------------------------------------
echo

# checking to see if this is a PERSON-specific project
if [[ $2 == "-M" || $2 == "-m" ]];
then
	echo autoArchive will examine PERSON’s directories!
	projtype="MC"
else
	echo 
	# projtype string doesn't matter if not PERSON proj /
	# so we give it a fun string
	projtype="BanditTheDog"

fi

# define the pathway to files on local computer
cyg_images=“/DIRECTORY_PATH/images/${projname}"
cyg_data="/DIRECTORY_PATH/data/${projname}"

# check if the /images/ pathway actually exists
# if not, kill the program.
if [ ! -d "$cyg_images" ];
then
	echo $cyg_images does not exist
	echo
	echo killing autoArchive!
	exit 
fi

# check if the /data/ path actually exists
# if not, kill the program
if [ ! -d "$cyg_data" ];
then
	echo $cyg_data does not exist
	echo
	echo killing autoArchive!
	exit 
fi

echo
echo

# creating variables of the dirs we are moving everything to
Archive_dir=“/ARCHIVE_PATH/${projname}"
Archive_prep="${Archive_dir}/Prep"
Archive_ss="${Archive_dir}/SS_560"
Archive_ss_data="${Archive_ss}/data"
Archive_ss_images="${Archive_ss}/images" 

# making the  directories we just defined
echo mkdir $Archive_dir
ssh SERVER "mkdir $Archive_dir"
echo mkdir $Archive_prep
ssh SERVER "mkdir $Archive_prep"
echo mkdir $Archive_ss
ssh SERVER "mkdir $Archive_ss"
echo mkdir $Archive_ss_data
ssh SERVER "mkdir $Archive_ss_data"
echo mkdir $Archive_ss_images
ssh SERVER "mkdir $Archive_ss_images"

echo
echo
echo

# removing minification levels for img
# find the matching files in the prep dir.
# finds all natches in subsequent dirs too
# then zips them
# -type f specifies that we are looking for a file
# -name "..." says with this matching condition
# -o is or 
for file in $( find $cyg_images $cyg_data -type f -name "*.img_2" -o -name "*.img_4" -o -name "*.img_8" -o -name "*.img_16" -o -name "*.img_32" -o -name "*.img_64" -o -name "*.img_128" -o -name "*.img_256" -o -name "*.img_512" -o -name "*.img_1024" -o -name "*.img_2048");
do
    echo removing $file
    rm $file
done

# removing minification levels for tif
for file in $( find $cyg_images $cyg_data -type f -name "*.tif_2" -o -name "*.tif_4" -o -name "*.tif_8" -o -name "*.tif_16" -o -name "*.tif_32" -o -name "*.tif_64" -o -name "*.tif_128" -o -name "*.tif_256" -o -name "*.tif_512" -o -name "*.tif_1024" -o -name "*.tif_2048");
do
    echo removing $file
    rm $file
done

echo
echo
echo

#zip all necessary files in /images/ and /data/
# find the matching files in the prep dir.
# finds all natches in subsequent dirs too
# then zips them
# -type f specifies that we are looking for a file
# -name "..." says with this matching condition
# -o is or 
for file in $( find $cyg_images $cyg_data -type f -name "*.dte" -o -name "*.dtp" -o -name "*.dtf" -o -name "*.img" -o -name "*.tif" -o -name "*.raw" -o -name "*.cub");
do
    echo gzipping $file
    gzip $file
done

echo
echo gzipped the files on local computer!
echo

# enter /images/ directory and change permissions
cd $cyg_images
find . -exec chmod 775 {} +;

echo
echo transfering files from /images/ to archive
echo

# transfer /images/ files to the archive. 
# secure copy
# r is recursive, p is preserve
scp -rp $cyg_images DESTINATION

# enter /data/, change permissions, and transfer files to the archive.
# also copies over the .prj, password also necessary
cd $cyg_data
find . -exec chmod 775 {} +;

echo
echo
echo transfering files from /data/ to archive.
echo

# secure copy
# r is recursive, p is preserve
scp -rp $cyg_data DESTINATION

echo
# this also grabs the .prj file
scp ${cyg_data}.prj DESTINATION
echo
echo
echo 'source autoArchive.sh'
echo

# Part 2 of the script is located in /DIR_PATH/bin/autoArchive
# We execute it from here and let it run
ssh DESTINATION “/DIR_PATH/bin/autoArchive.sh $projname $Archive_prep $projtype"

echo
echo autoArchive has finished running all processes!

exit 0
